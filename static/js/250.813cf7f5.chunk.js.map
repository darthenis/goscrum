{"version":3,"file":"static/js/250.813cf7f5.chunk.js","mappings":"4JAIaA,EAAO,SAACC,EAAOC,GAAR,OAChBC,IAAAA,KAAU,CACNF,MAAOA,EACPC,KAAMA,EACNE,kBAAmB,UACnBC,MAAO,QACPC,MAAO,IACPC,kBAAkB,M,iECTX,SAASC,IAEpB,OAEI,gBAAKC,UAAU,c,qKCKR,SAASC,IAEpB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAUXC,EAAcC,EAAAA,KAAaC,MAAM,CAEnCC,SAAUF,EAAAA,KAAaG,SAAS,sBAChCC,SAAUJ,EAAAA,KAAaG,SAAS,wBA2CpC,OACY,gBAAKX,UAAU,OAAf,UACI,SAAC,KAAD,CACQa,cAzDF,CAElBH,SAAU,GACVE,SAAU,IAuDUE,iBAAkBP,EAClBQ,SA7CP,SAAAC,GAEbZ,GAAW,GAEXa,MAAMC,4CAAmC,CACrCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,KACtBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAOF,MAAK,SAAAG,GAEH,MAArBA,EAAKC,aAEJC,eAAeC,QAAQ,QAASH,EAAKI,OAAOC,OAC5CH,eAAeC,QAAQ,WAAYH,EAAKI,OAAOE,KAAKvB,UAEpDN,GAAW,GAEXC,EAAS,YAITD,GAAW,IAEXb,EAAAA,EAAAA,GAAK,4BAA0B,+CAInC2C,OAAM,SAAAC,IAGN5C,EAAAA,EAAAA,SAUQ,SAKK,cAAEyB,OAAF,IAAUoB,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,OAAnB,OACG,UAAC,KAAD,YACA,+CACA,4BACI,kBAAOC,QAAQ,WAAf,gCACA,SAAC,KAAD,CAAQC,KAAK,OACLC,KAAK,WACLC,MAAO,CAACC,OAAQL,EAAO3B,UAAY0B,EAAQ1B,SAAW,yCAA2C,2BACxG2B,EAAO3B,UAAY0B,EAAQ1B,WAAY,uBAAI2B,EAAO3B,eAEvD,4BACI,kBAAO4B,QAAQ,WAAf,4BACA,SAAC,KAAD,CAAQC,KAAK,WACLC,KAAK,WACLC,MAAO,CAACC,OAAQL,EAAOzB,UAAYwB,EAAQxB,SAAU,yCAA2C,2BACvGyB,EAAOzB,UAAYwB,EAAQxB,WAAY,uBAAIyB,EAAOzB,eAEvD,mBAAQ2B,KAAK,SAASE,MAAO,CAACE,gBAAiBxC,GAAW,SAA1D,SACKA,GAAU,SAAC,IAAD,IAAa,YAE5B,SAAC,KAAD,CAAMyC,GAAG,YAAY5C,UAAU,eAA/B,mC","sources":["utils/alert.jsx","utils/spinner/Spinner.jsx","views/auth/Login/Login.jsx"],"sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nexport const swal = (title, text) => \r\n    Swal.fire({\r\n        title: title,\r\n        text: text,\r\n        confirmButtonText: \"Aceptar\",\r\n        width: \"400px\",\r\n        timer: 10000,\r\n        timerProgressBar: true\r\n    })\r\n\r\n","import './Spinner.styles.css'\r\n\r\nexport default function Spinner(){\r\n\r\n    return(\r\n\r\n        <div className=\"spinner\"></div>\r\n    )\r\n\r\n}","import {useState} from 'react'\r\nimport { Formik, Form, Field } from \"formik\"\r\nimport {Link, useNavigate} from \"react-router-dom\"\r\nimport * as Yup from \"yup\"\r\nimport { swal } from \"../../../utils/alert\"\r\nimport Spinner from \"../../../utils/spinner/Spinner\"\r\n\r\nimport '../Auth.style.css'\r\n\r\nconst {REACT_APP_API_URL} = process.env\r\n\r\nexport default function Login(){\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n\r\n        userName: \"\",\r\n        password: \"\"\r\n\r\n    }\r\n\r\n\r\n    const loginSchema = Yup.object().shape({\r\n\r\n        userName: Yup.string().required('*Campo obligatorio'),\r\n        password: Yup.string().required('*Campo obligatorio')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n\r\n        setLoading(true)\r\n\r\n        fetch(REACT_APP_API_URL + \"/auth/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(values)\r\n        }).then(res => res.json().then(data => {\r\n\r\n            if(data.status_code === 200){\r\n\r\n                sessionStorage.setItem(\"token\", data.result.token);\r\n                sessionStorage.setItem(\"userName\", data.result.user.userName);\r\n\r\n                setLoading(false)\r\n\r\n                navigate(\"/tasks\")\r\n\r\n            } else {\r\n\r\n                setLoading(false)\r\n\r\n                swal(\"Credenciales inválidas\", \"Por favor verifique sus credenciales\")\r\n\r\n            }\r\n\r\n        })).catch(error => {\r\n\r\n\r\n            swal()\r\n\r\n        })\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n                <div className=\"auth\">\r\n                    <Formik \r\n                            initialValues={initialValues}\r\n                            validationSchema={loginSchema}\r\n                            onSubmit={onSubmit}>\r\n\r\n                        {({values, touched, errors})=>(\r\n                            <Form>\r\n                            <h1>Iniciar Sesión</h1>\r\n                            <div>\r\n                                <label htmlFor=\"userName\">Nombre de usuario</label>\r\n                                <Field  type=\"text\" \r\n                                        name=\"userName\" \r\n                                        style={{border: errors.userName && touched.userName ? 'solid 1px var(---global-primary-color)' : 'var(---global-border)'}} />\r\n                                {errors.userName && touched.userName && <p>{errors.userName}</p>}\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"password\">Contraseña</label>\r\n                                <Field  type=\"password\" \r\n                                        name=\"password\" \r\n                                        style={{border: errors.password && touched.password? 'solid 1px var(---global-primary-color)' : 'var(---global-border)'}} />\r\n                                {errors.password && touched.password && <p>{errors.password}</p>}\r\n                            </div>\r\n                            <button type=\"submit\" style={{backgroundColor: loading && 'white'}}>\r\n                                {loading ? <Spinner/> : 'Enviar'}\r\n                            </button>\r\n                            <Link to=\"/register\" className=\"linkRegister\">Registrarme</Link>\r\n                            </Form>\r\n\r\n                        )}\r\n                       \r\n                    </Formik>\r\n                </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n//019d4121-3078-49ba-ae8c-0ab67aa029de"],"names":["swal","title","text","Swal","confirmButtonText","width","timer","timerProgressBar","Spinner","className","Login","useState","loading","setLoading","navigate","useNavigate","loginSchema","Yup","shape","userName","required","password","initialValues","validationSchema","onSubmit","values","fetch","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","res","json","data","status_code","sessionStorage","setItem","result","token","user","catch","error","touched","errors","htmlFor","type","name","style","border","backgroundColor","to"],"sourceRoot":""}